<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_Write_Tabela" Id="{fec04bf7-55fc-476f-adf6-1c00718f8730}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Write_Tabela
(* Writing of CSV file in text mode. None of the field value is containing any non-printing control characters like line feed, carriage return, quotation marks, semicolon... *)
VAR
//	bWrite			: BOOL := FALSE;(* Rising edge starts program execution *)
	sNetId			: T_AmsNetId := '';	(* TwinCAT system network address *)
	sFileName		: T_MaxString := 'C:\Users\User\Desktop\PLC\Softwares de Máquinas\Indab\Receitas\Receitas_Carrossel.csv';(* CSV destination file path and name *)
	//sFileName		: T_MaxString := '\Hard Disk\Receitas\Receitas_Carrossel.csv';(* CSV destination file path and name *)
	//sFileName		: T_MaxString := 'C:\Users\User\Desktop\PLC\Softwares de Máquinas\Indab\Receitas\Receitas_Carrossel.csv';(* CSV destination file path and name *)	
	sCSVLine		: T_MaxString := '';(* Single CSV text line (row, record), we are using string as record buffer (your are able to see created fields) *)
	sCSVField		: T_MaxString := '';(* Single CSV field value (column, record field) *)
	bBusy			: BOOL;
	bError			: BOOL;
	nErrId			: UDINT;
	nRow	 		: UDINT 	:= 0;(* Row number (record) *)
	nColumn			: UDINT 	:= 0;(* Column number (record field) *)
	hFile			: UINT		:= 0;(* File handle of the source file *)
	step			: DWORD 	:= 0;
	fbFileOpen		: FB_FileOpen;(* Opens file *)
	fbFileClose		: FB_FileClose;(* Closes file *)
	fbFilePuts		: FB_FilePuts;(* Writes one record (line) *)
	fbWriter		: FB_CSVMemBufferWriter;(* Helper function block used to create CSV data bytes (single record line) *)

	database		: ARRAY[0..MAX_CSV_ROWS, 0..MAX_CSV_COLUMNS ] OF STRING(MAX_CSV_FIELD_LENGTH);
	
	string_escrita	: T_MaxString;
	
	TON_ESCRITA		: TON;
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[database := database_read;

CASE step OF
	0:	(* Wait for rising edge at bWrite variable *)
		IF bWrite THEN
			bWrite 		:= FALSE;
			bBusy 		:= TRUE;
			bError		:= FALSE;
			nErrId		:= 0;
			hFile		:= 0;
			nRow	 	:= 0;
			nColumn		:= 0;
			step 		:= 1;
			Simbolo_Atualizacao := TRUE;
			TON_ESCRITA (IN:= TRUE);
		END_IF

	1:	(* Open source file *)
		fbFileOpen(  bExecute := FALSE  );
		fbFileOpen( 	sNetId := sNetId, sPathName := sFileName, nMode := FOPEN_MODEWRITE OR FOPEN_MODETEXT,(* Open file in TEXT mode! *)
						ePath := PATH_GENERIC, bExecute := TRUE );
		step := 2;

	2:(* Wait until open not busy *)
		fbFileOpen( bExecute := FALSE, bError => bError, nErrID => nErrID, hFile => hFile );
		IF NOT fbFileOpen.bBusy THEN
			IF NOT fbFileOpen.bError THEN
				step := 30;
			ELSE(* Error: file not found? *)
				step := 200;
			END_IF
		END_IF
		
		
	30:
			
		string_escrita := '';
		fbWriter.eCmd := eEnumCmd_First;(* Write first field value *)
		IF nRow <= (Main_Receita.Item_livre + 2)(*MAX_CSV_ROWS*) THEN

			IF nColumn < MAX_CSV_COLUMNS THEN
				
				string_escrita := database[ nRow, nColumn ];
				
				
				string_escrita := CONCAT (STR1 := string_escrita, STR2 := ';');
				(* Add new field to the record buffer 
				fbWriter( 	pBuffer := ADR( string_escrita ), cbBuffer := SIZEOF( string_escrita ) - 1, putValue := sCSVField, pValue := 0, cbValue := 0,
							bCRLF := ( nColumn = MAX_CSV_COLUMNS ) );(* bCRLF == TRUE => Write CRLF after the last field value *)
				IF fbWriter.bOk THEN
					fbWriter.eCmd := eEnumCmd_Next; Write next field value *)
					nColumn := nColumn + 1;
					step := 40;
			//	ELSE(* Error *)
			//		step := 100;
			//		RETURN;
			//	END_IF
			
			ELSE
				nColumn := 0;
				step := 33;	
			
			END_IF
		
		ELSE(* All rows written => Close file *)
			step := 100;
		END_IF	
			
		

	33:(* Convert one PLC record to CSV format *)
		
		string_escrita := 'ACABOU;$0A';
			(* FB_FilePuts adds allready CR (carriage return) to the written line.
			We have to replace the $R$L characters with $L character to avoid double CR. *)
		IF RIGHT( string_escrita, 2 ) = '$R$L' THEN
			string_escrita := REPLACE( string_escrita, '$L', 2, LEN( string_escrita ) - 1 );
		END_IF

		nRow := nRow + 1;(* Increment number of created records (rows) *)
		step := 40;(* Write record to the file *)

		

	40:	(* Write single text line *)
		
		fbFilePuts( bExecute := FALSE );
		fbFilePuts( sNetId := sNetId, hFile := hFile, sLine := string_escrita, bExecute := TRUE );
		step := 50;

	50:(* Wait until write not busy *)
		fbFilePuts( bExecute := FALSE, bError => bError, nErrID => nErrID );
		IF NOT fbFilePuts.bBusy THEN
			IF NOT fbFilePuts.bError THEN
				IF nColumn = 0 AND nRow >= MAX_CSV_ROWS THEN
					step := 100;(* Write next record *)
				ELSE 
					step := 30;	
				END_IF	
			ELSE(* Error *)
				step := 100;
			END_IF
		END_IF
		

	100:	(* Close source file *)
		fbFileClose( bExecute := FALSE );
		fbFileClose( sNetId := sNetId, hFile := hFile, bExecute := TRUE );
		step := 110;

	110:(* Wait until close not busy *)
		fbFileClose( bExecute := FALSE, bError => bError, nErrID => nErrID );
		IF ( NOT fbFileClose.bBusy ) THEN
			hFile := 0;
			step := 200;
		END_IF

	200: (* Error or ready step => cleanup *)
		IF ( hFile <> 0 ) THEN
			step := 100; (* Close the source file *)
		ELSE
			bBusy := FALSE;
			step := 0;	(* Ready *)
			Simbolo_Atualizacao := FALSE;
			bRead := TRUE;
		END_IF

END_CASE

TON_ESCRITA (pt := T#120S);]]></ST>
    </Implementation>
    <LineIds Name="P_Write_Tabela">
      <LineId Id="1322" Count="128" />
      <LineId Id="127" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>